{"version":3,"sources":["img/logo.svg","BgParticleJS.js","battle_context/BattleContext.js","stats_section/RankingTable.js","stats_section/HistoricTable.js","stats_section/StatsSection.js","heroesListing/HeroListFrame.js","HeroCard.js","heroesListing/HeroBiography.js","heroesListing/HeroesListing.js","Header.js","HomeNav.js","Help.js","Footer.js","battle/ChoiceNickname.js","battle/Countdown.js","battle/UsernameChoice.js","battle/BattleTransition.js","battle/CombatInit.js","battle/CombatScene.js","battle/WinOrLose.js","battle/CombatResult.js","battle/FinalScore.js","battle/BattleScene.js","App.js","battle_context/getRandomNumber.js","battle_context/changeNickname.js","battle_context/nicknameChecked.js","battle_context/displayCollapseId.js","battle_context/addSelectedHeroOnSelectedCard.js","battle_context/changePlayer.js","battle_context/setRandomStatRound.js","battle_context/isSimilar.js","battle_context/changeStatForFight.js","battle_context/generateDeck.js","battle_context/changeTransitionRound.js","battle_context/goToNextRound.js","battle_context/hasWonRound.js","battle_context/BattleProvider.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BgParticleJS","react_default","a","createElement","particles_default","className","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","BattleContext","createContext","rank_sort","history","sort","person1","person2","win","createRankingTable","rankingTable","rankingObject","i","length","undefined","winner","nickname","lose","loser","createRankingObject","Object","keys","map","key","index","push","name","RankingTable","battle_context_BattleContext","Consumer","battleContext","react","state","web","from","to","config","delay","props","style","transform","person","enter","leave","scale","styles","Component","HistoricTable","reactstrap_es","slice","reverse","match","inverse","date","score","StatsSection","fluid","id","xs","Link","sm","offset","src_stats_section_RankingTable","src_stats_section_HistoricTable","HeroListFrame","_ref","imageHero","nameHero","heroData","siteContext","scrollchor_default","beforeAnimate","toggle","top","width","src","alt","HeroCard","indexHero","selectedHeroOfList","battle","round","currentPlayer","deck","used","image","url","powerstats","strength","intelligence","durability","HeroBiography","biography","aliases","hero","concat","publisher","alignement","alignment","connections","relatives","HeroesListing","onChange","event","handleSearchListChange","searchInputHeroList","type","placeholder","isOpen","collapse","isCollapse","md","src_HeroCard","heroesListing_HeroBiography","heroes","filter","toLowerCase","includes","b","localeCompare","lg","heroesListing_HeroListFrame","heroeId","Header","logo","HomeNav","fontSize","Help","borderBottom","textDecoration","class","Footer","href","ChoiceNickname","title","context","nicknameChecked","handleChangeNickname","onKeyPress","onPressEnterNicknameChecked","onClick","submitCheck","Countdown","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sec","countdown","bind","assertThisInitialized","calculateCountdown","inherits","createClass","_this2","interval","setInterval","setState","stop","diff","timeLeft","clearInterval","countDown","initialisationAndStartCombat","React","UsernameChoice","minHeight","src_battle_ChoiceNickname","player_1","player_2","battle_Countdown","BattleTransition","roundNumber","handleChangeTransition","CombatInit","height","randomStat","stats","item","selectHero","CombatScene","transition","battle_BattleTransition","battle_CombatInit","WinOrLose","player1","player2","roundWinner","CombatResult","tension","friction","selectedCard","src_battle_WinOrLose","marginTop","textAlign","color","textShadow","hasWonRound","setNewFight","getToNextRound","setStorage","getToFinalScore","FinalScore","setRematch","resetAllDataBattle","BattleScene","src_battle_UsernameChoice","roundFinished","matchFinished","battle_FinalScore","battle_CombatResult","battle_CombatScene","App","src_BgParticleJS","src_Header_0","Switch","Route","exact","path","component","src_Footer_0","getRandomNumber","Math","floor","changeNickname","prevState","nicknameVerify","target","join","replace","objectSpread","defineProperty","displayCollapseId","idHero","addSelectedHeroOnSelectedCard","idHeroSelected","changePlayer","setRandomStatRound","isSimilar","prevRandom","newRandom","isSimilar_this","changeStatForFight","randomNumber","drawNewStat","generateDeck","sizeDeck","oneCard","listNumberRandom","randomN","changeTransitionRound","goToNextRound","statHeroPlayer1","statHeroPlayer2","updatedState","listHeroes","BattleProvider","fetch","then","results","json","data","toConsumableArray","_this3","AsyncStorage","getItem","rank","JSON","parse","historyJson","callApiSuperHeroes","getStorage","_this4","Provider","nicknameLength","charCode","heroUsed","setTimeout","setRandomStat","deckTotal","deck_player_1","deck_player_2","indexOf","gameCompleteDate","Date","gameDisplayDate","getMonth","getDate","getFullYear","getMatchData","stringHistory","stringify","setItem","children","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","battle_context_BattleProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf835fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f721e8eb.svg\";","import React from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\n\nconst BgParticleJS = () => (\n  <Particles\n    className=\"bgParticle\"\n    params={{\n      particles: {\n        number: {\n          value: 200,\n          density: {\n            enable: false\n          }\n        },\n        size: {\n          value: 3,\n          random: true,\n          anim: {\n            speed: 4,\n            size_min: 0.3\n          }\n        },\n        line_linked: {\n          enable: false\n        },\n        move: {\n          random: true,\n          speed: 1,\n          direction: \"top\",\n          out_mode: \"out\"\n        }\n      },\n      interactivity: {\n        events: {\n          onhover: {\n            enable: true,\n            mode: \"bubble\"\n          },\n          onclick: {\n            enable: true,\n            mode: \"repulse\"\n          }\n        },\n        modes: {\n          bubble: {\n            distance: 250,\n            duration: 2,\n            size: 0,\n            opacity: 0\n          },\n          repulse: {\n            distance: 400,\n            duration: 4\n          }\n        }\n      }\n    }}\n  />\n);\n\nexport default BgParticleJS;\n","import { createContext } from \"react\";\n\nconst BattleContext = createContext();\n\nexport default BattleContext;\n","import React, { Component, Fragment } from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport \"./RankingTable.css\";\nimport { Spring, Transition } from \"react-spring\";\n\nconst rank_sort = history =>\n  history.sort((person1, person2) => person2.win - person1.win);\n\nexport const createRankingObject = history => {\n  let rankingObject = {};\n  for (let i = 0; i < history.length; i++) {\n    if (rankingObject[history[i].winner.nickname] === undefined) {\n      rankingObject[history[i].winner.nickname] = { win: 1, lose: 0 };\n    } else {\n      rankingObject[history[i].winner.nickname].win += 1;\n    }\n    if (rankingObject[history[i].loser.nickname] === undefined) {\n      rankingObject[history[i].loser.nickname] = { win: 0, lose: 1 };\n    } else {\n      rankingObject[history[i].loser.nickname].lose += 1;\n    }\n  }\n  return rankingObject;\n};\n\nexport const createRankingTable = history => {\n  const rankingTable = [];\n  const rankingObject = createRankingObject(history);\n  Object.keys(rankingObject).map(function(key, index) {\n    rankingTable.push({\n      name: key,\n      win: rankingObject[key].win,\n      lose: rankingObject[key].lose\n    });\n  });\n  return rankingTable;\n};\n\nclass RankingTable extends Component {\n  render() {\n    return (\n      <BattleContext.Consumer>\n        {battleContext => (\n          <Fragment>\n            {battleContext.state.history.length > 0 && (\n              <div className=\"ranking-table\">\n                <Spring\n                  from={{ opacity: 0 }}\n                  to={{ opacity: 1 }}\n                  config={{ delay: 200 }}\n                >\n                  {props => (\n                    <h2 style={props} className=\"text-center\">\n                      RANKING\n                    </h2>\n                  )}\n                </Spring>\n                <table>\n                  <tbody>\n                    <Spring\n                      from={{ opacity: 0, transform: \"translate3d(0,-50px,0)\" }}\n                      to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n                      config={{ delay: 200 }}\n                    >\n                      {props => (\n                        <tr style={props} className=\"table-head\">\n                          <td>Rank</td>\n                          <td>Player</td>\n                          <td>Win</td>\n                          <td>Lose</td>\n                        </tr>\n                      )}\n                    </Spring>\n                    <Transition\n                      keys={rank_sort(\n                        createRankingTable(battleContext.state.history)\n                      ).map((person, index) => index)}\n                      from={{ opacity: 0, transform: \"translate3d(0,-50px,0)\" }}\n                      enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n                      leave={{\n                        opacity: 0,\n                        scale: 0\n                      }}\n                      delay={300}\n                    >\n                      {rank_sort(\n                        createRankingTable(battleContext.state.history)\n                      ).map((person, index) => styles => (\n                        <tr style={styles}>\n                          <td>{index + 1}</td>\n                          <td>{person.name}</td>\n                          <td>{person.win}</td>\n                          <td>{person.lose}</td>\n                        </tr>\n                      ))}\n                    </Transition>\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </Fragment>\n        )}\n      </BattleContext.Consumer>\n    );\n  }\n}\n\nexport default RankingTable;\n","import React from \"react\";\nimport { Transition, Spring } from \"react-spring\";\nimport \"./HistoricTable.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  Card,\n  CardTitle,\n  CardText\n} from \"reactstrap\";\nconst HistoricTable = () => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <div className=\"historic-table\">\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ delay: 200 }}\n        >\n          {props => (\n            <h2 style={props} className=\"text-center\">\n              HISTORIC\n            </h2>\n          )}\n        </Spring>\n        <ListGroup className=\"text-center h5\">\n          <Transition\n            keys={battleContext.state.history\n              .slice(0)\n              .reverse()\n              .map((match, index) => index)}\n            from={{ opacity: 0, transform: \"translate3d(100px,0,0)\" }}\n            enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n            leave={{\n              opacity: 0,\n              scale: 0\n            }}\n            delay={300}\n          >\n            {battleContext.state.history\n              .slice(0)\n              .reverse()\n              .map((match, index) => styles => (\n                <ListGroupItem\n                  style={styles}\n                  className=\"border-dark p-0 mb-2 player\"\n                  key={index}\n                >\n                  <Card inverse>\n                    <CardTitle className=\"text-secondary date\">\n                      {match.date}\n                    </CardTitle>\n                    <div className=\"d-flex justify-content-around\">\n                      <CardText className=\"winner\">\n                        <span>{match.winner.nickname} : </span>\n                        {match.winner.score}\n                      </CardText>\n                      <CardText className=\"loser\">\n                        <span>{match.loser.nickname} : </span>\n                        {match.loser.score}\n                      </CardText>\n                    </div>\n                  </Card>\n                </ListGroupItem>\n              ))}\n          </Transition>\n        </ListGroup>\n      </div>\n    )}\n  </BattleContext.Consumer>\n);\nexport default HistoricTable;\n","import React from \"react\";\n\nimport { Row, Col, Button, Container } from \"reactstrap\";\nimport RankingTable from \"./RankingTable\";\nimport HistoricTable from \"./HistoricTable\";\nimport { Link } from \"react-router-dom\";\n\nconst StatsSection = () => (\n  <Container fluid id=\"statsSection\">\n    <Row>\n      <Col xs=\"12 pl-5\">\n        <Link to=\"/\">\n          <Button className=\"button-style mt-3 ml-5\">Back</Button>\n        </Link>\n      </Col>\n      <Col sm={{ size: 4, offset: 1 }}>\n        <RankingTable />\n      </Col>\n      <Col sm={{ size: 4, offset: 2 }}>\n        <HistoricTable />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default StatsSection;\n","import React from \"react\";\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\nimport Scrollchor from \"react-scrollchor\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nconst HeroListFrame = ({ imageHero, nameHero, heroData }) => (\n  <BattleContext.Consumer>\n    {siteContext => (\n      <Scrollchor\n        to=\"#heroesListSection\"\n        beforeAnimate={() => siteContext.toggle(heroData)}\n      >\n        <Card className=\"list-heroes\">\n          <CardImg top width=\"100%\" src={imageHero} alt=\"Card image cap\" />\n          <CardBody>\n            <CardTitle className=\"cardTitleHero\">{nameHero} </CardTitle>\n          </CardBody>\n        </Card>\n      </Scrollchor>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default HeroListFrame;\n","import React from \"react\";\nimport { Row, Col, Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\nimport BattleContext from \"./battle_context/BattleContext\";\n\nconst HeroCard = ({ indexHero, selectedHeroOfList, battle }) => (\n  <BattleContext.Consumer>\n    {siteContext => (\n      <div>\n        <Card\n          className={\n            indexHero !== undefined\n              ? !siteContext.state.battle[\n                  siteContext.state.battle.round.currentPlayer\n                ].deck[indexHero].used\n                ? \"battleCard p-2 unUsed\"\n                : \"battleCard p-2\"\n              : \"battleCard p-2\"\n          }\n        >\n          <CardTitle className=\"text-center battleCardTitle\">\n            {selectedHeroOfList.name}\n          </CardTitle>\n\n          <CardImg\n            top\n            width=\"100%\"\n            src={selectedHeroOfList.image.url}\n            alt=\"Card image cap\"\n          />\n          {!(battle === \"true\") ? (\n            <CardBody className=\"pb-0 pt-2 battleCardBody\">\n              <Row>\n                <Col className=\"text-center responsive-card\">\n                  <i className=\"fas fa-dumbbell\" />\n                  <p className=\"mb-0\">\n                    {selectedHeroOfList.powerstats.strength}\n                  </p>\n                </Col>\n                <Col className=\"text-center responsive-card\">\n                  <i className=\"fas fa-bolt\" />\n                  <p className=\"mb-0\">{selectedHeroOfList.powerstats.speed}</p>\n                </Col>\n                <Col className=\"text-center responsive-card\">\n                  <i className=\"fas fa-book\" />\n                  <p className=\"mb-0\">\n                    {selectedHeroOfList.powerstats.intelligence}\n                  </p>\n                </Col>\n                <Col className=\"text-center responsive-card\">\n                  <i className=\"fas fa-shield-alt\" />\n                  <p className=\"mb-0\">\n                    {selectedHeroOfList.powerstats.durability}\n                  </p>\n                </Col>\n              </Row>\n            </CardBody>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </div>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default HeroCard;\n","import React from \"react\";\n\nconst HeroBiography = ({ selectedHeroOfList }) => (\n  <div>\n    <h3>{selectedHeroOfList.name}</h3>\n\n    {selectedHeroOfList.biography[\"full-name\"] !== \"\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Full Name</span>:{\" \"}\n        {selectedHeroOfList.biography[\"full-name\"]}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography[\"alter-egos\"] !== \"No alter egos found.\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Alter-Egos</span>:{\" \"}\n        {selectedHeroOfList.biography[\"alter-egos\"]}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography.aliases[0] !== \"-\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Aliases</span>:{\" \"}\n        {selectedHeroOfList.biography.aliases.map((hero, index) => {\n          return index === selectedHeroOfList.biography.aliases.length - 1\n            ? `${hero}`\n            : `${hero} - `;\n        })}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography[\"place-of-birth\"] !== \"-\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Place of Birth</span>:{\" \"}\n        {selectedHeroOfList.biography[\"place-of-birth\"]}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography[\"first-appearance\"] !== \"-\" && (\n      <p>\n        <span className=\"itemTitleBiography\">First appearance</span>:{\" \"}\n        {selectedHeroOfList.biography[\"first-appearance\"]}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography.publisher !== \"null\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Publisher</span>:{\" \"}\n        {selectedHeroOfList.biography.publisher}\n      </p>\n    )}\n\n    {selectedHeroOfList.biography.alignement !== \"\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Alignement</span>:{\" \"}\n        {selectedHeroOfList.biography.alignment}\n      </p>\n    )}\n\n    {selectedHeroOfList.connections[\"group-affiliation\"] !== \"-\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Group affiliation</span>:{\" \"}\n        {selectedHeroOfList.connections[\"group-affiliation\"]}\n      </p>\n    )}\n\n    {selectedHeroOfList.connections.relatives !== \"-\" && (\n      <p>\n        <span className=\"itemTitleBiography\">Relatives</span>:{\" \"}\n        {selectedHeroOfList.connections.relatives}\n      </p>\n    )}\n  </div>\n);\n\nexport default HeroBiography;\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Collapse,\n} from \"reactstrap\";\nimport HeroListFrame from \"./HeroListFrame\";\nimport HeroCard from \"../HeroCard\";\nimport HeroBiography from \"./HeroBiography\";\nimport \"./HeroesListing.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Link } from \"react-router-dom\";\n\nconst HeroesListing = () => (\n  <BattleContext.Consumer>\n    {(siteContext) => (\n      <section id=\"heroesListSection\">\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\">\n              <Link to=\"/\">\n                <Button className=\"mt-3 button-style\">Back</Button>\n              </Link>\n            </Col>\n            <h2 className=\"mr-3\">Heroes List</h2>\n\n            <Form className=\"ml-auto\">\n              <FormGroup>\n                <Input\n                  onChange={(event) =>\n                    siteContext.handleSearchListChange(event)\n                  }\n                  value={siteContext.state.searchInputHeroList}\n                  type=\"search\"\n                  name=\"searchCard\"\n                  placeholder=\"Search a card\"\n                />\n              </FormGroup>\n            </Form>\n          </Row>\n          <Collapse isOpen={siteContext.state.collapse}>\n            {siteContext.state.isCollapse && (\n              <Row>\n                <Col\n                  xs={{ size: 12, offset: 0 }}\n                  sm={{ size: 4, offset: 0 }}\n                  md={{ size: 3, offset: 1 }}\n                  className=\"mt-5\"\n                >\n                  <HeroCard\n                    selectedHeroOfList={siteContext.state.selectedHeroOfList}\n                  />\n                </Col>\n                <Col\n                  xs={{ size: 12, offset: 0 }}\n                  sm={{ size: 7, offset: 1 }}\n                  md={{ size: 7, offset: 1 }}\n                >\n                  <HeroBiography\n                    selectedHeroOfList={siteContext.state.selectedHeroOfList}\n                  />\n                </Col>\n              </Row>\n            )}\n          </Collapse>\n\n          <Row>\n            {siteContext.state.battle.heroes\n              .filter((hero) =>\n                hero.name\n                  .toLowerCase()\n                  .includes(siteContext.state.searchInputHeroList.toLowerCase())\n              )\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .map((hero) => (\n                <Col\n                  key={hero.id}\n                  className=\"heroFrameAngle my-3\"\n                  xs=\"4\"\n                  md=\"3\"\n                  lg=\"2\"\n                >\n                  <HeroListFrame\n                    heroeId={hero.id}\n                    imageHero={hero.image.url}\n                    nameHero={hero.name}\n                    heroData={hero}\n                  />\n                </Col>\n              ))}\n          </Row>\n        </Container>\n      </section>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default HeroesListing;\n","import React from \"react\";\nimport logo from \"./img/logo.svg\";\nimport \"./Header.css\";\n\nimport { Col, Row } from \"reactstrap\";\n\nconst Header = () => (\n  <header className=\"container-fluid\">\n    <Row>\n      <Col className=\"logo\" xs={{ size: 4, offset: 4 }}>\n        <img src={logo} className=\"d-block logo mx-auto\" alt=\"logo\" />\n      </Col>\n    </Row>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./HomeNav.css\";\nimport { Link } from \"react-router-dom\";\nimport { Spring } from \"react-spring\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardTitle,\n  CardDeck,\n  CardSubtitle,\n  CardBody\n} from \"reactstrap\";\n\nconst HomeNav = () => (\n  <nav className=\"navHome\">\n    <Row>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0px,0,0)\" }}\n        config={{ delay: 50 }}\n      >\n        {props => (\n          <Col style={props} xs={{ size: \"2\", offset: \"9\" }}>\n            <Link\n              style={{ fontSize: \"20px\" }}\n              className=\"text-light border p-2 rounded\"\n              to=\"/Help\"\n            >\n              <i className=\"fas fa-info-circle\" /> How to Play?\n            </Link>\n          </Col>\n        )}\n      </Spring>\n    </Row>\n    <CardDeck className=\"justify-content-center mx-auto mt-5\">\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0px,0,0)\" }}\n        config={{ delay: 50 }}\n      >\n        {props => (\n          <Col style={props} md=\"5\" lg=\"3\" className=\"mb-2\">\n            <Link to=\"/Battle\">\n              <Card className=\"startfight\">\n                <CardBody className=\"m-3\">\n                  <CardTitle className=\"glitch\">Start a Battle</CardTitle>\n                  <CardSubtitle>Find a Friend &amp; Win!</CardSubtitle>\n                </CardBody>\n              </Card>\n            </Link>\n          </Col>\n        )}\n      </Spring>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0px,0,0)\" }}\n        config={{ delay: 100 }}\n      >\n        {props => (\n          <Col style={props} md=\"5\" lg=\"3\" className=\"mb-2\">\n            <Link to=\"/Stats\">\n              <Card className=\"history\">\n                <CardBody className=\"m-3\">\n                  <CardTitle>Stats</CardTitle>\n                  <CardSubtitle>History &amp; Rankings</CardSubtitle>\n                </CardBody>\n              </Card>\n            </Link>\n          </Col>\n        )}\n      </Spring>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0px,0,0)\" }}\n        config={{ delay: 150 }}\n      >\n        {props => (\n          <Col style={props} md=\"5\" lg=\"3\" className=\"mb-2\">\n            <Link to=\"/HeroesListing\">\n              <Card className=\"list\">\n                <CardBody className=\"m-3\">\n                  <CardTitle>Heroes List</CardTitle>\n                  <CardSubtitle>About your Heroes</CardSubtitle>\n                </CardBody>\n              </Card>\n            </Link>\n          </Col>\n        )}\n      </Spring>\n    </CardDeck>\n  </nav>\n);\n\nexport default HomeNav;\n","import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { Spring } from \"react-spring\";\nimport { Link } from \"react-router-dom\";\n\nconst Help = () => (\n  <div className=\"help-section\">\n    <Spring\n      from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n      to={{ opacity: 1, transform: \"translate3d(0px,0,0)\" }}\n      config={{ delay: 50 }}\n    >\n      {props => (\n        <div style={props}>\n          <Row className=\"d-flex justify-content-center\">\n            <Col\n              className=\"align-right justify-content-end mb-2 pl-0 pb-4\"\n              style={{ borderBottom: \"1px solid #fff\" }}\n              xs={{ size: \"8\" }}\n            >\n              <Link\n                style={{\n                  fontSize: \"20px\",\n                  textDecoration: \"none\"\n                }}\n                className=\"text-light border p-2 rounded\"\n                to=\"/\"\n              >\n                <i class=\"fas fa-arrow-circle-left\" /> Back to Home\n              </Link>\n            </Col>\n            <Col className=\"p-0\" xs={{ size: 8 }}>\n              <p>\n                The Wild Battle is a WebApp programmed in React. You can play\n                with your favourite Hero in a \"Card Game\". It's a turn by turn\n                game and for each round you have to pick a card. Your choice\n                must take into account the \"Random Stat\". Indeed at the\n                beginning of a round, a stat is drawn by lot to determined with\n                which stat heroes will fight. For instance, if the Strength is\n                choosen, and if your card have a better strength stat than your\n                opponent's, you win the round, and the best of the five rounds,\n                you win the match.\n              </p>\n              <ul>\n                <li>\n                  <h3>\n                    <span>1</span>\n                    Start a Battle\n                  </h3>\n                  <p>\n                    Each player will fill in an input with his nickname. This\n                    nickname need to have at least three characters.\n                  </p>\n                  <p>\n                    When the two players' nicknames are checked, the fight can\n                    begin!\n                  </p>\n                </li>\n                <li>\n                  <h3>\n                    <span>2</span>\n                    Transition Phase\n                  </h3>\n                  <p>\n                    At the beginning of each round there will be a transition.\n                    The player who doesn't play must not look at the screen.\n                  </p>\n                  <p>\n                    The current player press the \"Ready button\" when he's ready.\n                  </p>\n                </li>\n                <li>\n                  <h3>\n                    <span>3</span>\n                    Battle Phase\n                  </h3>\n                  <p>\n                    The deck of each player is generated at the first round. The\n                    two players receive six random hero cards with four stats :{\" \"}\n                    <span>\n                      <i className=\"fas fa-dumbbell\" /> Strength,\n                    </span>{\" \"}\n                    <span>\n                      <i className=\"fas fa-bolt\" /> Speed\n                    </span>\n                    ,{\" \"}\n                    <span>\n                      <i className=\"fas fa-book\" /> Intelligence and{\" \"}\n                      <span>\n                        <i className=\"fas fa-shield-alt\" /> Durability.\n                      </span>\n                    </span>\n                  </p>\n                  <p>\n                    Each round, a \"Stat\" is generated, that will influenced the\n                    card's choice of the players. Maybe the best card he\n                    has....or a weaker card to not sacrifice a good option for\n                    the next rounds.\n                  </p>\n                </li>\n                <li>\n                  <h3>\n                    <span>4</span>\n                    Final Score\n                  </h3>\n                  <p>\n                    After five rounds the Battle ends and the winner is\n                    determined. The result is saved and the ranking refreshed\n                    with the new datas.\n                  </p>\n                </li>\n              </ul>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </Spring>\n  </div>\n);\n\nexport default Help;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nimport { Col, Row } from \"reactstrap\";\n\nconst Footer = () => (\n  <footer className=\"mt-5 container-fluid fixed-bottom\">\n    <Row className=\"\">\n      <Col className=\"d-flex justify-content-center\">\n        <div className=\"d-flex\">\n          <a href=\"#\" className=\"d-block mr-2\">\n            <i className=\"fab fa-facebook\" />\n          </a>\n          <a href=\"#\" className=\"d-block mr-5\">\n            <i className=\"fab fa-twitter-square\" />\n          </a>\n        </div>\n        <div>\n          <a href=\"#\" className=\"mr-2\">\n            About\n          </a>\n          <a href=\"#\">Legal Mentions</a>\n        </div>\n      </Col>\n    </Row>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport { Col, Input } from \"reactstrap\";\nimport \"./ChoiceNickname.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nconst ChoiceNickname = ({ name, title }) => (\n  <Col xs={{ size: 10 }} md={{ size: 3 }} className=\"my-auto\">\n    <BattleContext.Consumer>\n      {context => (\n        <Fragment>\n          <h3\n            className={\n              context.state.battle[name].nicknameChecked\n                ? \"nicknameChecked\"\n                : undefined\n            }\n          >\n            {title}: {context.state.battle[name].nickname}\n          </h3>\n          {!context.state.battle[name].nicknameChecked && (\n            <div>\n              <div className=\"d-flex\">\n                <Input\n                  type=\"text\"\n                  name={name}\n                  placeholder=\"Enter Your Nickname\"\n                  className=\"mr-2\"\n                  onChange={event => context.handleChangeNickname(event, name)}\n                  onKeyPress={event =>\n                    context.onPressEnterNicknameChecked(\n                      event,\n                      name,\n                      context.state.battle[name].nickname.length\n                    )\n                  }\n                  value={context.state.battle[name].nickname}\n                />\n                {context.state.battle[name].nickname.length > 2 && (\n                  <span onClick={() => context.submitCheck(name)}>\n                    <i className=\"far fa-check-circle fa-2x btnNickname\" />\n                  </span>\n                )}\n              </div>\n              {0 < context.state.battle[name].nickname.length ? (\n                context.state.battle[name].nickname.length < 3 ? (\n                  <div className=\"text-danger\">\n                    Your nickname must have at least 3 characters\n                  </div>\n                ) : (\n                  <div className=\"text-success\">Your nickname is valid</div>\n                )\n              ) : (\n                <div>&nbsp;</div>\n              )}\n            </div>\n          )}\n        </Fragment>\n      )}\n    </BattleContext.Consumer>\n  </Col>\n);\n\nexport default ChoiceNickname;\n","import React from \"react\";\nimport { Col } from \"reactstrap\";\nimport \"./AnimationCountdown.css\";\nimport BattleContext from \"../battle_context/BattleContext\";\n\nexport class Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sec: 3\n    };\n    this.countdown = this.countdown.bind(this);\n    this.calculateCountdown = this.calculateCountdown.bind(this);\n  }\n\n  countdown() {\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  calculateCountdown() {\n    let diff = this.state.sec;\n    const timeLeft = {\n      sec: 0\n    };\n    diff -= 1;\n    timeLeft.sec = diff;\n    if (diff === 0) {\n      this.stop();\n    }\n    return timeLeft;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  componentDidMount() {\n    this.countdown();\n  }\n\n  render() {\n    const countDown = this.state;\n\n    return (\n      <Col className=\"my-auto text-center\" xs=\"12\" md=\"4\">\n        {countDown.sec > 0 && (\n          <div>\n            <strong className=\"pulsate-css FontBangers\">{countDown.sec}</strong>\n          </div>\n        )}\n        {countDown.sec === 0 && (\n          <BattleContext>\n            {battleContext => (\n              <h3 className=\"FontBangers fight\">\n                <span\n                  onClick={() => battleContext.initialisationAndStartCombat()}\n                >\n                  FIGHT\n                </span>\n              </h3>\n            )}\n          </BattleContext>\n        )}\n      </Col>\n    );\n  }\n}\n\nexport default Countdown;\n","import React, { Fragment } from \"react\";\nimport ChoiceNickname from \"./ChoiceNickname\";\nimport Countdown from \"./Countdown\";\nimport { Row, Container, Col, Button } from \"reactstrap\";\nimport \"./UsernameChoice.css\";\nimport { Link } from \"react-router-dom\";\n\nimport BattleContext from \"../battle_context/BattleContext\";\n\nconst UsernameChoice = () => (\n  <Container fluid id=\"usernameSection\">\n    <BattleContext.Consumer>\n      {context => (\n        <Fragment>\n          <Row>\n            <Col xs=\"12\" className=\"pl-5\">\n              <Link to=\"/\">\n                <Button className=\"button-style mt-3 ml-5\">\n                  <span>Back</span>\n                </Button>\n              </Link>\n            </Col>\n          </Row>\n          <Row\n            style={{ minHeight: \"60vh\" }}\n            className={\"d-flex justify-content-around\"}\n          >\n            <ChoiceNickname name=\"player_1\" title=\"Player 1\" />\n            {context.state.battle.player_1.nicknameChecked &&\n              context.state.battle.player_2.nicknameChecked && <Countdown />}\n            <ChoiceNickname name=\"player_2\" title=\"Player 2\" />\n          </Row>\n        </Fragment>\n      )}\n    </BattleContext.Consumer>\n  </Container>\n);\n\nexport default UsernameChoice;\n","import React from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Button, Row } from \"reactstrap\";\nimport { Spring } from \"react-spring\";\n\nconst BattleTransition = () => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n        leave={{ opacity: 0 }}\n      >\n        {styles => (\n          <div style={styles}>\n            <div\n              style={{ styles }}\n              className=\"battle-transition d-flex flex-column justify-content-center text-align-center\"\n            >\n              <Row>\n                <h2 className=\"mx-auto\" style={{ fontSize: \"150px\" }}>\n                  Round {battleContext.state.battle.round.roundNumber}\n                </h2>\n              </Row>\n              <Row>\n                <h3 style={{ fontSize: \"50px\" }} className=\"mx-auto\">\n                  {\n                    battleContext.state.battle[\n                      battleContext.state.battle.round.currentPlayer\n                    ].nickname\n                  }\n                  's turn\n                </h3>\n              </Row>\n              <Row>\n                <h3 className=\"mx-auto\">\n                  Score: {battleContext.state.battle.player_1.score} -{\" \"}\n                  {battleContext.state.battle.player_2.score}\n                </h3>\n              </Row>\n              <Row>\n                <Button\n                  className=\"button-style\"\n                  onClick={() => battleContext.handleChangeTransition()}\n                >\n                  I'm ready !\n                </Button>\n              </Row>\n            </div>\n          </div>\n        )}\n      </Spring>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default BattleTransition;\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport HeroCard from \"../HeroCard\";\nimport { Transition, Spring } from \"react-spring\";\n\nimport BattleContext from \"../battle_context/BattleContext\";\n\nclass CombatInit extends Component {\n  render() {\n    return (\n      <Container fluid id=\"CombatInit\" style={{ height: \"60vh\" }}>\n        <BattleContext.Consumer>\n          {context => (\n            <Fragment>\n              <div className=\"mt-5\">\n                <Spring\n                  from={{ opacity: 0 }}\n                  to={{ opacity: 1 }}\n                  leave={{ opacity: 0 }}\n                >\n                  {styles => (\n                    <h2 className=\"text-center\" style={styles}>\n                      Fight on\n                      <br />\n                      <span className=\"mr-3\">\n                        {context.state.battle.round.randomStat === 0 ? (\n                          <i className=\"fas fa-dumbbell\" />\n                        ) : context.state.battle.round.randomStat === 1 ? (\n                          <i className=\"fas fa-bolt\" />\n                        ) : context.state.battle.round.randomStat === 2 ? (\n                          <i className=\"fas fa-book\" />\n                        ) : (\n                          <i className=\"fas fa-shield-alt\" />\n                        )}\n                      </span>\n                      {\n                        context.state.battle.stats[\n                          context.state.battle.round.randomStat\n                        ]\n                      }\n                      <span className=\"ml-3\">\n                        {context.state.battle.round.randomStat === 0 ? (\n                          <i className=\"fas fa-dumbbell\" />\n                        ) : context.state.battle.round.randomStat === 1 ? (\n                          <i className=\"fas fa-bolt\" />\n                        ) : context.state.battle.round.randomStat === 2 ? (\n                          <i className=\"fas fa-book\" />\n                        ) : (\n                          <i className=\"fas fa-shield-alt\" />\n                        )}\n                      </span>\n                    </h2>\n                  )}\n                </Spring>\n              </div>\n              {context.state.battle[context.state.battle.round.currentPlayer]\n                .deck.length > 0 && (\n                <Row\n                  className=\"battle-deck justify-content-center\"\n                  style={{ minHeight: \"80%\" }}\n                >\n                  <Transition\n                    keys={context.state.battle[\n                      context.state.battle.round.currentPlayer\n                    ].deck.map(item => item.id)}\n                    from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n                    enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n                    leave={{\n                      opacity: 0,\n                      scale: 0\n                    }}\n                    delay={300}\n                  >\n                    {context.state.battle[\n                      context.state.battle.round.currentPlayer\n                    ].deck.map((hero, index) => styles => (\n                      <Col\n                        className=\"mt-5\"\n                        style={styles}\n                        xs=\"6\"\n                        md=\"4\"\n                        lg=\"2\"\n                        onClick={() => {\n                          context.selectHero(hero.id);\n                        }}\n                        key={hero.id}\n                      >\n                        <HeroCard indexHero={index} selectedHeroOfList={hero} />\n                      </Col>\n                    ))}\n                  </Transition>\n                </Row>\n              )}\n            </Fragment>\n          )}\n        </BattleContext.Consumer>\n      </Container>\n    );\n  }\n}\n\nexport default CombatInit;\n","import React, { Fragment } from 'react'\nimport BattleTransition from './BattleTransition';\nimport BattleContext from \"../battle_context/BattleContext\"\nimport CombatInit from \"./CombatInit\"\n\nconst CombatScene = () => (\n  <BattleContext>\n    {battleContext => (\n      <Fragment>\n        {/* {battleContext.state.battle.round.currentPlayer === 1 && (battleContext.getRandomInt())} */}\n\n        {battleContext.state.battle.round.transition ?\n          (<BattleTransition />\n          ) : (\n            <CombatInit />\n          )\n        }\n      </Fragment>\n    )}\n  </BattleContext>\n\n)\n\nexport default CombatScene\n","import React, { Fragment } from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport \"./WinOrLose.css\";\n\nconst WinOrLose = ({ player1, player2 }) => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <Fragment>\n        {battleContext.state.battle.round.roundWinner === player1 ? (\n          <h2 className=\"win\">WIN</h2>\n        ) : battleContext.state.battle.round.roundWinner === player2 ? (\n          <h2 className=\"lose\">LOSE</h2>\n        ) : (\n          <h2> </h2>\n        )}\n      </Fragment>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default WinOrLose;\n","import React, { Fragment } from \"react\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport HeroCard from \"../HeroCard\";\nimport WinOrLose from \"./WinOrLose\";\nimport { Transition, Spring } from \"react-spring\";\n\nconst CombatResult = () => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <Fragment>\n        <Row>\n          <Col xs=\"12\">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              leave={{ opacity: 0 }}\n            >\n              {styles => (\n                <h2 className=\"text-center\" style={styles}>\n                  Fight on\n                  <br />\n                  <span className=\"mr-3\">\n                    {battleContext.state.battle.round.randomStat === 0 ? (\n                      <i className=\"fas fa-dumbbell\" />\n                    ) : battleContext.state.battle.round.randomStat === 1 ? (\n                      <i className=\"fas fa-bolt\" />\n                    ) : battleContext.state.battle.round.randomStat === 2 ? (\n                      <i className=\"fas fa-book\" />\n                    ) : (\n                      <i className=\"fas fa-shield-alt\" />\n                    )}\n                  </span>\n                  {\n                    battleContext.state.battle.stats[\n                      battleContext.state.battle.round.randomStat\n                    ]\n                  }\n                  <span className=\"ml-3\">\n                    {battleContext.state.battle.round.randomStat === 0 ? (\n                      <i className=\"fas fa-dumbbell\" />\n                    ) : battleContext.state.battle.round.randomStat === 1 ? (\n                      <i className=\"fas fa-bolt\" />\n                    ) : battleContext.state.battle.round.randomStat === 2 ? (\n                      <i className=\"fas fa-book\" />\n                    ) : (\n                      <i className=\"fas fa-shield-alt\" />\n                    )}\n                  </span>\n                </h2>\n              )}\n            </Spring>\n          </Col>\n        </Row>\n        <Row className=\"d-flex justify-content-around\">\n          <Transition\n            config={{ tension: 170, friction: 6 }}\n            from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n            enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n            leave={{ opacity: 0 }}\n          >\n            {styles => (\n              <Col style={styles} className=\"text-center px-5\" xs=\"3\">\n                <h2>{battleContext.state.battle.player_1.nickname}</h2>\n                <HeroCard\n                  className=\"position:relative\"\n                  battle=\"true\"\n                  selectedHeroOfList={\n                    battleContext.state.battle.player_1.selectedCard[0]\n                  }\n                />\n                <WinOrLose player1={1} player2={2} />\n              </Col>\n            )}\n          </Transition>\n          <Col className=\"text-center\" xs=\"3\">\n            <Row\n              style={{ marginTop: \"22%\" }}\n              className=\"d-flex justify-content-around align-items-center\"\n            >\n              {battleContext.state.battle.round.roundWinner !== 0 ? (\n                <Col xs=\"3\">\n                  <Spring\n                    config={{ tension: 170, friction: 7 }}\n                    from={{ fontSize: \"0vw\" }}\n                    to={{ fontSize: \"4vw\" }}\n                  >\n                    {props => (\n                      <h2 style={props}>\n                        {\n                          battleContext.state.battle.player_1.selectedCard[0]\n                            .powerstats[\n                            battleContext.state.battle.stats[\n                              battleContext.state.battle.round.randomStat\n                            ].toLowerCase()\n                          ]\n                        }\n                      </h2>\n                    )}\n                  </Spring>\n                </Col>\n              ) : (\n                \"\"\n              )}\n              <Col xs=\"6\">\n                <Transition\n                  config={{ tension: 170, friction: 7 }}\n                  from={{ fontSize: \"0vw\" }}\n                  enter={{ fontSize: \"12vw\" }}\n                  leave={{ opacity: 0 }}\n                >\n                  {styles => <h2 style={styles}>VS</h2>}\n                </Transition>\n              </Col>\n              {battleContext.state.battle.round.roundWinner !== 0 ? (\n                <Col xs=\"3\">\n                  <Spring\n                    config={{ tension: 170, friction: 7 }}\n                    from={{ fontSize: \"0vw\" }}\n                    to={{ fontSize: \"4vw\" }}\n                  >\n                    {props => (\n                      <h2 style={props}>\n                        {\n                          battleContext.state.battle.player_2.selectedCard[0]\n                            .powerstats[\n                            battleContext.state.battle.stats[\n                              battleContext.state.battle.round.randomStat\n                            ].toLowerCase()\n                          ]\n                        }\n                      </h2>\n                    )}\n                  </Spring>\n                </Col>\n              ) : (\n                \"\"\n              )}\n            </Row>\n            <Row className=\"d-flex justify-content-center\">\n              <Col xs=\"12\">\n                {battleContext.state.battle.round.roundWinner === 3 ? (\n                  <h2\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: \"135px\",\n                      color: \"#cecece\",\n                      textShadow: \"3px 3px #646464\"\n                    }}\n                  >\n                    Draw\n                  </h2>\n                ) : (\n                  <h2> </h2>\n                )}\n              </Col>\n            </Row>\n            <Row className=\"d-flex justify-content-center\">\n              <Col xs=\"12\">\n                {battleContext.state.battle.round.roundWinner === 0 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() =>\n                      battleContext.hasWonRound(\n                        battleContext.state.battle.player_1.selectedCard[0]\n                          .powerstats[\n                          battleContext.state.battle.stats[\n                            battleContext.state.battle.round.randomStat\n                          ].toLowerCase()\n                        ],\n                        battleContext.state.battle.player_2.selectedCard[0]\n                          .powerstats[\n                          battleContext.state.battle.stats[\n                            battleContext.state.battle.round.randomStat\n                          ].toLowerCase()\n                        ]\n                      )\n                    }\n                  >\n                    Result\n                  </Button>\n                ) : battleContext.state.battle.round.roundWinner === 3 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => battleContext.setNewFight()}\n                  >\n                    Fight Again\n                  </Button>\n                ) : battleContext.state.battle.round.roundNumber !== 5 ? (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => battleContext.getToNextRound()}\n                  >\n                    Next round\n                  </Button>\n                ) : (\n                  <Button\n                    className=\"button-style\"\n                    onClick={() => {\n                      battleContext.setStorage(\n                        battleContext.state.battle.player_1,\n                        battleContext.state.battle.player_2\n                      );\n                      battleContext.getToFinalScore();\n                    }}\n                  >\n                    Final Score\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Col>\n          <Transition\n            config={{ tension: 170, friction: 6 }}\n            from={{ opacity: 0, transform: \"translate3d(100px,0,0)\" }}\n            enter={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n            leave={{ opacity: 0 }}\n          >\n            {styles => (\n              <Col style={styles} className=\"text-center px-5\" xs=\"3\">\n                <h2>{battleContext.state.battle.player_2.nickname}</h2>\n                <HeroCard\n                  className=\"position:relative\"\n                  battle=\"true\"\n                  selectedHeroOfList={\n                    battleContext.state.battle.player_2.selectedCard[0]\n                  }\n                />\n                <WinOrLose player1={2} player2={1} />\n              </Col>\n            )}\n          </Transition>\n        </Row>\n      </Fragment>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default CombatResult;\n","import React, { Fragment } from \"react\";\nimport { Button, Row, Col } from \"reactstrap\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport { Link } from \"react-router-dom\";\nimport { Spring } from \"react-spring\";\n\nconst FinalScore = () => (\n  <BattleContext.Consumer>\n    {battleContext => (\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-100px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n        leave={{ opacity: 0 }}\n      >\n        {styles => (\n          <div style={styles}>\n            <div\n              style={{ height: \"calc(100vh - 164px)\", styles }}\n              className=\"battle-transition d-flex flex-column justify-content-center text-align-center\"\n            >\n              <Fragment>\n                <i className=\"fas fa-trophy fa-10x mx-auto text-light\" />\n                {battleContext.state.battle.player_1.score >\n                battleContext.state.battle.player_2.score ? (\n                  <h2 style={{ fontSize: \"150px\", textAlign: \"center\" }}>\n                    {battleContext.state.battle.player_1.nickname} WIN\n                  </h2>\n                ) : (\n                  <h2 style={{ fontSize: \"150px\", textAlign: \"center\" }}>\n                    {battleContext.state.battle.player_2.nickname} WIN\n                  </h2>\n                )}\n                <Row className=\"d-flex justify-content-center\">\n                  <Col xs=\"3\">\n                    <Button\n                      className=\"button-style\"\n                      onClick={() => battleContext.setRematch()}\n                    >\n                      Rematch?\n                    </Button>{\" \"}\n                  </Col>\n                  <Col xs=\"3\" className=\"ml-5\">\n                    <Link to=\"/\">\n                      <Button\n                        className=\"button-style\"\n                        onClick={() => {\n                          battleContext.resetAllDataBattle();\n                        }}\n                      >\n                        Go to Home\n                      </Button>\n                    </Link>\n                  </Col>\n                </Row>\n              </Fragment>\n            </div>\n          </div>\n        )}\n      </Spring>\n    )}\n  </BattleContext.Consumer>\n);\n\nexport default FinalScore;\n","import React, { Component, Fragment } from \"react\";\nimport UsernameChoice from \"./UsernameChoice\";\nimport CombatScene from \"./CombatScene\";\nimport BattleContext from \"../battle_context/BattleContext\";\nimport CombatResult from \"./CombatResult\";\nimport FinalScore from \"./FinalScore\";\n\nclass BattleScene extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BattleContext.Consumer>\n          {battleContext => (\n            <Fragment>\n              {battleContext.state.battle.round.roundNumber === 0 ? (\n                <UsernameChoice />\n              ) : !battleContext.state.battle.round.roundFinished ? (\n                <CombatScene />\n              ) : !battleContext.state.battle.round.matchFinished ? (\n                <CombatResult />\n              ) : (\n                <FinalScore />\n              )}\n            </Fragment>\n          )}\n        </BattleContext.Consumer>\n      </Fragment>\n    );\n  }\n}\nexport default BattleScene;\n","import React, { Component, Fragment } from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"./App.css\";\nimport BgParticlesJS from \"./BgParticleJS\";\nimport StatsSection from \"./stats_section/StatsSection\";\nimport HeroesListing from \"./heroesListing/HeroesListing\";\nimport Header from \"./Header\";\nimport HomeNav from \"./HomeNav\";\nimport Help from \"./Help\";\nimport Footer from \"./Footer\";\nimport BattleScene from \"./battle/BattleScene\";\nimport { Route, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <BgParticlesJS />\n        <Header />\n        <Container fluid>\n          <Switch>\n            <Route exact path=\"/\" component={HomeNav} />\n            <Route path=\"/Help\" component={Help} />\n            <Route path=\"/Battle\" component={BattleScene} />\n            <Route path=\"/HeroesListing\" component={HeroesListing} />\n            <Route path=\"/Stats\" component={StatsSection} />\n          </Switch>\n        </Container>\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const getRandomNumber = length =>\n  Math.floor(Math.random() * Math.floor(length));\nexport default getRandomNumber;\n","const changeNickname = (prevState, event, name) => {\n  let updateStats = prevState;\n  let nicknameVerify =\n    event.target.value > 0\n      ? event.target.value\n          .match(/[\\w]/g)\n          .join(\"\")\n          .replace(/[_]+/g, \"_\")\n      : event.target.value;\n\n  updateStats = {\n    ...prevState,\n    battle: {\n      ...prevState.battle,\n      [name]: {\n        ...prevState.battle[name],\n        nickname: nicknameVerify\n      }\n    }\n  };\n\n  return updateStats;\n};\n\nexport default changeNickname;\n","const changeNickname = (prevState, name) => {\n  let updateStats = prevState;\n  updateStats = {\n    ...prevState,\n    battle: {\n      ...prevState.battle,\n      [name]: {\n        ...prevState.battle[name],\n        nicknameChecked: true\n      }\n    }\n  };\n  return updateStats;\n};\n\nexport default changeNickname;\n","const displayCollapseId = idHero => {\n  return { collapse: true, isCollapse: 1, selectedHeroOfList: idHero };\n};\nexport default displayCollapseId;\n","const addSelectedHeroOnSelectedCard = (prevState, idHeroSelected) => {\n  const deck = prevState.battle[prevState.battle.round.currentPlayer].deck.map(\n    hero => {\n      if (hero.id === idHeroSelected) {\n        hero.used = true;\n      }\n      return hero;\n    }\n  );\n  return {\n    battle: {\n      ...prevState.battle,\n      [prevState.battle.round.currentPlayer]: {\n        ...prevState.battle[prevState.battle.round.currentPlayer],\n        deck,\n\n        selectedCard: prevState.battle[\n          prevState.battle.round.currentPlayer\n        ].deck.filter(hero => hero.id === idHeroSelected)\n      }\n    }\n  };\n};\nexport default addSelectedHeroOnSelectedCard;\n","const changePlayer = prevState => {\n  return {\n    battle: {\n      ...prevState.battle,\n      round: {\n        ...prevState.battle.round,\n        currentPlayer:\n          prevState.battle.round.currentPlayer === \"player_1\"\n            ? \"player_2\"\n            : \"player_1\",\n        transition: true,\n        roundFinished:\n          prevState.battle.round.currentPlayer === \"player_2\"\n            ? true\n            : prevState.battle.round.roundFinished\n      }\n    }\n  };\n};\n\nexport default changePlayer;\n","import getRandomNumber from \"./getRandomNumber\";\n\nconst setRandomStatRound = prevState => {\n  return {\n    battle: {\n      ...prevState.battle,\n      round: {\n        ...prevState.battle.round,\n        randomStat: getRandomNumber(prevState.battle.stats.length)\n      }\n    }\n  };\n};\n\nexport default setRandomStatRound;\n","import getRandomNumber from \"./getRandomNumber\";\n\nconst isSimilar = (prevRandom, newRandom, prevState) =>\n  prevRandom !== newRandom\n    ? newRandom\n    : this.isSimilar(\n        prevRandom,\n        getRandomNumber(prevState.battle.stats.length)\n      );\n\nexport default isSimilar;\n","import getRandomNumber from \"./getRandomNumber\";\nimport isSimilar from \"./isSimilar\";\n\nconst changeStatForFight = (prevState) => {\n  const randomNumber = getRandomNumber(prevState.battle.stats.length);\n  const drawNewStat = isSimilar(\n    prevState.battle.round.randomStat,\n    randomNumber,\n    prevState\n  );\n\n  return {\n    battle: {\n      ...prevState.battle,\n      round: {\n        ...prevState.battle.round,\n        roundWinner: 0,\n        randomStat: drawNewStat,\n      },\n    },\n  };\n};\n\nexport default changeStatForFight;\n","import getRandomNumber from \"./getRandomNumber\";\n\nconst generateDeck = (prevState, sizeDeck) => {\n  let oneCard = 0;\n  const deck = [];\n  const listNumberRandom = [];\n  for (let i = sizeDeck; i > 0; i--) {\n    const randomN = getRandomNumber(prevState.battle.heroes.length);\n    if (!listNumberRandom.includes(randomN)) {\n      oneCard = prevState.battle.heroes[randomN];\n      listNumberRandom.push(randomN);\n      deck.push({ ...oneCard });\n    } else {\n      i++;\n    }\n  }\n\n  return deck;\n};\n\nexport default generateDeck;\n","const changeTransitionRound = prevState => ({\n  battle: {\n    ...prevState.battle,\n    round: {\n      ...prevState.battle.round,\n      transition: !prevState.battle.round.transition\n    }\n  }\n});\n\nexport default changeTransitionRound;\n","import getRandomNumber from \"./getRandomNumber\";\n\nconst goToNextRound = prevState => {\n  return {\n    battle: {\n      ...prevState.battle,\n      round: {\n        ...prevState.battle.round,\n        roundFinished: false,\n        roundNumber: prevState.battle.round.roundNumber + 1,\n        currentPlayer: \"player_1\",\n        roundWinner: 0,\n        randomStat: getRandomNumber(prevState.battle.stats.length)\n      }\n    }\n  };\n};\n\nexport default goToNextRound;\n","const hasWonRound = (statHeroPlayer1, statHeroPlayer2, prevState) => {\n  let updatedState = prevState.battle;\n  if (statHeroPlayer1 - statHeroPlayer2 === 0) {\n    updatedState.round.roundWinner = 3;\n  } else {\n    if (statHeroPlayer1 - statHeroPlayer2 > 0) {\n      updatedState.round.roundWinner = 1;\n      updatedState.player_1.score++;\n    } else {\n      updatedState.round.roundWinner = 2;\n      updatedState.player_2.score++;\n    }\n  }\n  return updatedState;\n};\n\nexport default hasWonRound;\n","import React, { Component } from \"react\";\nimport BattleContext from \"./BattleContext\";\nimport AsyncStorage from \"@callstack/async-storage\";\nimport historyJson from \"../stats_section/History.json\";\n\nimport getRandomNumber from \"./getRandomNumber\";\n\nimport changeNickname from \"./changeNickname\";\nimport nicknameChecked from \"./nicknameChecked\";\nimport displayCollapseId from \"./displayCollapseId\";\nimport addSelectedHeroOnSelectedCard from \"./addSelectedHeroOnSelectedCard\";\nimport changePlayer from \"./changePlayer\";\nimport setRandomStatRound from \"./setRandomStatRound\";\nimport changeStatForFight from \"./changeStatForFight\";\nimport generateDeck from \"./generateDeck\";\nimport changeTransitionRound from \"./changeTransitionRound\";\nimport goToNextRound from \"./goToNextRound\";\nimport hasWonRound from \"./hasWonRound\";\n\nconst listHeroes = [\n  18,\n  30,\n  34,\n  57,\n  60,\n  63,\n  69,\n  92,\n  145,\n  162,\n  165,\n  207,\n  208,\n  213,\n  222,\n  226,\n  263,\n  310,\n  313,\n  322,\n  341,\n  346,\n  354,\n  361,\n  386,\n  416,\n  418,\n  423,\n  427,\n  435,\n  441,\n  462,\n  485,\n  489,\n  490,\n  502,\n  514,\n  522,\n  523,\n  526,\n  529,\n  566,\n  567,\n  619,\n  620,\n  627,\n  639,\n  644,\n  672,\n  687,\n  729\n];\n\nclass BattleProvider extends Component {\n  state = {\n    battle: {\n      stats: [\"Strength\", \"Speed\", \"Intelligence\", \"Durability\"],\n      heroes: [],\n      player_1: {\n        nickname: \"\",\n        nicknameChecked: false,\n        deck: [],\n        score: 0,\n        selectedCard: {}\n      },\n      player_2: {\n        nickname: \"\",\n        nicknameChecked: false,\n        deck: [],\n        score: 0,\n        selectedCard: {}\n      },\n      round: {\n        roundFinished: false,\n        roundNumber: 0,\n        randomStat: 0,\n        currentPlayer: \"player_1\",\n        transition: true,\n        roundWinner: 0,\n        matchFinished: false\n      }\n    },\n    collapse: false,\n    isCollapse: 0,\n    selectedHeroOfList: [],\n    searchInputHeroList: \"\",\n    history: []\n  };\n\n  callApiSuperHeroes() {\n    for (let i = 0; i < listHeroes.length; i++) {\n      fetch(`http://superheroapi.com/api.php/2368931693133321/${listHeroes[i]}`)\n        .then(results => results.json()) // conversion du résultat en JSON\n        .then(data => {\n          data.used = false;\n          this.setState({\n            battle: {\n              ...this.state.battle,\n              heroes: [...this.state.battle.heroes, data]\n            }\n          });\n        });\n    }\n  }\n\n  getStorage() {\n    AsyncStorage.getItem(\"history\").then(rank => {\n      let history;\n      if (rank) {\n        history = JSON.parse(rank);\n      } else {\n        history = historyJson;\n      }\n      this.setState(() => ({\n        history: history\n      }));\n    });\n  }\n  componentDidMount() {\n    this.callApiSuperHeroes();\n    this.getStorage();\n  }\n\n  render() {\n    return (\n      <BattleContext.Provider\n        value={{\n          state: this.state,\n          handleChangeNickname: (event, name) =>\n            this.setState(changeNickname(this.state, event, name)),\n          submitCheck: name => {\n            this.setState(nicknameChecked(this.state, name));\n          },\n          onPressEnterNicknameChecked: (event, name, nicknameLength) => {\n            if (event.charCode === 13 && nicknameLength > 2) {\n              this.setState(nicknameChecked(this.state, name));\n            }\n          },\n          toggle: id => {\n            this.setState(displayCollapseId(id));\n          },\n          handleSearchListChange: event => {\n            this.setState({\n              searchInputHeroList: event.target.value,\n              collapse: false\n            });\n          },\n          selectHero: idHero => {\n            let heroUsed = 0;\n            this.state.battle[this.state.battle.round.currentPlayer].deck.map(\n              hero => {\n                if (hero.id === idHero) {\n                  !hero.used ? (heroUsed = 0) : (heroUsed = 1);\n                }\n                return hero;\n              }\n            );\n\n            if (!heroUsed) {\n              this.setState(addSelectedHeroOnSelectedCard(this.state, idHero));\n              setTimeout(() => {\n                this.setState(changePlayer(this.state));\n              }, 1000);\n            }\n          },\n\n          setRandomStat: () => {\n            this.setState(setRandomStatRound(this.state));\n          },\n\n          setNewFight: () => {\n            this.setState(changeStatForFight(this.state));\n          },\n          initialisationAndStartCombat: () => {\n            const deckTotal = generateDeck(this.state, 12);\n            const deck_player_1 = deckTotal.slice(0, 6);\n            const deck_player_2 = deckTotal.slice(6, 12);\n\n            this.setState({\n              battle: {\n                ...this.state.battle,\n                player_1: {\n                  ...this.state.battle.player_1,\n                  deck: deck_player_1\n                },\n                player_2: {\n                  ...this.state.battle.player_2,\n                  deck: deck_player_2\n                },\n                round: {\n                  ...this.state.battle.round,\n                  roundNumber: 1,\n                  randomStat: getRandomNumber(this.state.battle.stats.length)\n                }\n              }\n            });\n          },\n          handleChangeTransition: () => {\n            this.setState(changeTransitionRound(this.state));\n          },\n          getToNextRound: () => {\n            this.setState(goToNextRound(this.state));\n          },\n          hasWonRound: (statHeroPlayer1, statHeroPlayer2) => {\n            this.setState(\n              hasWonRound(statHeroPlayer1, statHeroPlayer2, this.state)\n            );\n          },\n\n          getToFinalScore: () => {\n            this.setState({\n              battle: {\n                ...this.state.battle,\n                round: {\n                  ...this.state.battle.round,\n                  matchFinished: true\n                }\n              }\n            });\n          },\n\n          setRematch: () => {\n            const deckTotal = generateDeck(this.state, 12);\n            const deck_player_1 = deckTotal.slice(0, 6);\n            const deck_player_2 = deckTotal.slice(6, 12);\n\n            this.setState({\n              battle: {\n                ...this.state.battle,\n                player_1: {\n                  ...this.state.battle.player_1,\n                  deck: deck_player_1,\n                  score: 0,\n                  selectedCard: {}\n                },\n                player_2: {\n                  ...this.state.battle.player_2,\n                  deck: deck_player_2,\n                  score: 0,\n                  selectedCard: {}\n                },\n                round: {\n                  roundFinished: false,\n                  roundNumber: 1,\n                  randomStat: 0,\n                  currentPlayer: \"player_1\",\n                  transition: true,\n                  roundWinner: 0,\n                  matchFinished: false\n                }\n              }\n            });\n          },\n\n          resetAllDataBattle: () => {\n            let oneCard = 0;\n            const deck = [];\n            for (let i = 12; i > 0; i--) {\n              const randomN = Math.floor(\n                Math.random() * this.state.battle.heroes.length\n              );\n              oneCard = this.state.battle.heroes[randomN];\n              if (deck.indexOf(oneCard) === -1) {\n                deck.push(oneCard);\n              } else {\n                i++;\n              }\n            }\n\n            const deck_player_1 = deck.slice(0, 6);\n            const deck_player_2 = deck.slice(6, 12);\n            this.setState({\n              battle: {\n                ...this.state.battle,\n                player_1: {\n                  nickname: \"\",\n                  nicknameChecked: false,\n                  deck: deck_player_1,\n                  score: 0,\n                  selectedCard: {}\n                },\n                player_2: {\n                  nickname: \"\",\n                  nicknameChecked: false,\n                  deck: deck_player_2,\n                  score: 0,\n                  selectedCard: {}\n                },\n                round: {\n                  roundFinished: false,\n                  roundNumber: 0,\n                  randomStat: 0,\n                  currentPlayer: \"player_1\",\n                  transition: true,\n                  roundWinner: 0,\n                  matchFinished: false\n                }\n              }\n            });\n          },\n\n          setStorage: (player_1, player_2) => {\n            let prevState = this.state.history;\n            const gameCompleteDate = new Date();\n            const gameDisplayDate = `${gameCompleteDate.getMonth() +\n              1}/${gameCompleteDate.getDate()}/${gameCompleteDate.getFullYear()}`;\n            const winner =\n              player_1.score > player_2.score ? player_1 : player_2;\n            const loser = player_1.score > player_2.score ? player_2 : player_1;\n            const getMatchData = {\n              winner: winner,\n              loser: loser,\n              date: gameDisplayDate\n            };\n            prevState.push({ ...getMatchData });\n\n            const stringHistory = JSON.stringify(prevState);\n            this.setState({ ...this.state, history: prevState });\n            AsyncStorage.setItem(\"history\", stringHistory);\n          }\n        }}\n      >\n        {this.props.children}\n      </BattleContext.Provider>\n    );\n  }\n}\n\nexport default BattleProvider;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport BattleProvider from \"./battle_context/BattleProvider\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <BattleProvider>\n      <App />\n    </BattleProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}